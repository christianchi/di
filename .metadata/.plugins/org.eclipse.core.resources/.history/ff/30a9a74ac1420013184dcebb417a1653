package com.dam.di.contextualactionmode;

import java.util.ArrayList;

import com.example.menucontextuallist.ItemFruta;
import com.example.menucontextuallist.R;

import android.app.Activity;
import android.os.Bundle;
import android.view.ActionMode;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.ArrayAdapter;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends Activity {

	ActionMode mActionMode;
	ListView lista;
	ArrayAdapter<String> adapter;
	ArrayList<String> listaItems;
	public int selectedItem = -1;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		lista = (ListView) findViewById(R.id.listView);
		listaItems = new ArrayList<String>();
		listaItems.add("Miguel");
		listaItems.add("Rebeca");
		listaItems.add("Rebeca Campos");
		listaItems.add("Olivia");
		listaItems.add("Miriam");

		adapter = new ArrayAdapter<String>(this,
				android.R.layout.simple_list_item_1, listaItems);
		lista.setAdapter(adapter);

		lista.setOnItemLongClickListener(new OnItemLongClickListener() {

			@Override
			public boolean onItemLongClick(AdapterView<?> parent, View view,
					int position, long id) {

				if (mActionMode != null) {
					return false;
				}

				selectedItem = position;
				Toast.makeText(getApplicationContext(),
						"Seleccionado el " + position, Toast.LENGTH_LONG)
						.show();

				// Start the CAB using the ActionMode.Callback defined above
				mActionMode = MainActivity.this.startActionMode(mActionModeCallback);
				view.setSelected(true);
				return true;
			}
		});

	}

	private ActionMode.Callback mActionModeCallback = new ActionMode.Callback() {

		// Called when the action mode is created; startActionMode() was called
		@Override
		public boolean onCreateActionMode(ActionMode mode, Menu menu) {
			// Inflate a menu resource providing context menu items
			MenuInflater inflater = mode.getMenuInflater();
			inflater.inflate(R.menu.action_mode_context_menu, menu);
			return true;
		}

		// Called each time the action mode is shown. Always called after
		// onCreateActionMode, but
		// may be called multiple times if the mode is invalidated.
		@Override
		public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
			return false; // Return false if nothing is done
		}

		// Called when the user selects a contextual menu item
		@Override
		public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
			switch (item.getItemId()) {
			case R.id.item_delete:
				Toast.makeText(getApplicationContext(), "Eliminado",
						Toast.LENGTH_LONG).show();
				eliminar(selectedItem);
				mode.finish(); // Action picked, so close the CAB
				return true;
			default:
				return false;
			}
		}

		// Called when the user exits the action mode
		@Override
		public void onDestroyActionMode(ActionMode mode) {
			mActionMode = null;
			selectedItem = -1;
		}

		private void eliminar(int selectedItem) {
			listaItems.remove(selectedItem);
			adapter.notifyDataSetChanged();
		}

	};
	
	// Adaptador de items
		class AdaptadorItemFruta extends ArrayAdapter<ItemFruta>{
			ImageView icono;
			TextView texto;
			CheckBox check;

			Activity context;

			AdaptadorItemFruta(Activity context) {
				super(context, R.layout.user_list_item, listaItems);
				this.context = context;
			}

			public View getView(int position, View convertView, ViewGroup parent) {

				View item = convertView;
				LayoutInflater inflater = context.getLayoutInflater();
				
				// Cada RelativeLayout que cuelga de ListView en el ‡rbol
				// anterior, proviene de haber rellenado con los datos de la
				// fruta correspondiente el objeto item definido a continuaci—n.
				item = inflater.inflate(R.layout.list_item, null);

				// Hasta este punto los elementos del layout list_item.xml
				// est‡n vac’os. TendrŽ que rescatarlos para rellenarlos con 
				// los datos de la fruta que estoy recorriendo en este momento
				icono = (ImageView) item.findViewById(R.id.icono);
				texto = (TextView) item.findViewById(R.id.texto);
				check = (CheckBox) item.findViewById(R.id.seleccionado);

				// La fruta actual es la que ocupa la posici—n "position"
				// dentro del ArrayList listaItem.
				ItemFruta itemFruta = listaItem.get(position);

				// Asigno el texto y la imagen del elemento itemFruta
				// que acabo de obtener del array. 
				// el mŽtodo getIdintifier() permite obtener un nœmero entero que
				// referencia a un recurso, a partir de un string, p.e. "drawable/cereza"
				// Para este ejemplo devolver’a -> R.drawable.cereza
				int imageResource = getResources().getIdentifier(itemFruta.getImagen(), null, getPackageName());
				icono.setImageDrawable(getResources().getDrawable(imageResource));
				texto.setText(itemFruta.getTexto());

				return(item);
			}
		}

}
